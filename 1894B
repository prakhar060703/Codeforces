Problem Link:- https://codeforces.com/contest/1894/problem/B

This question is totally based on observation
Hint:- You have to find atleast two digit which occur more than 1 times if found answer exist otherwise not

#include <bits/stdc++.h>
using namespace std;

#define fastio                        \
    ios_base::sync_with_stdio(false);  \
    cin.tie(NULL)

const int maximum=INT_MAX;
const int minimum=INT_MIN;
typedef long long ll;
typedef unsigned long long int ull;
const int MOD=1e9+7;


void solve(){
  int n;
  cin>>n;
  int num[n];
  for(int i=0;i<n;i++)cin>>num[i];
  
  map<int,int>m;
  for(int i=0;i<n;i++)m[num[i]]++;
  vector<int>temp;
  for(auto it=m.begin();it!=m.end();it++){
     if((*it).second>=2)temp.push_back((*it).first); 
  }
  
//   for(int i=0;i<temp.size();i++)cout<<temp[i]<<" ";
//   cout<<"\n";
  
  if(temp.size()<2)cout<<-1<<"\n";
  else{
      int flag1=0,flag2=0;
      for(int i=0;i<n;i++){
          if(num[i]==temp[0]&&flag1==0){
              num[i]=2;
              flag1=1;
          }
          else if(num[i]==temp[1]&&flag2==0){
              num[i]=3;
              flag2=1;
          }
          else num[i]=1;
      }
      
      for(int i=0;i<n;i++)cout<<num[i]<<" ";
      cout<<"\n";
  }
  
  
        return;
}

int main() {
    fastio;
    ll t;
    cin>>t;
    while(t--){
        solve();
    }
	return 0;
 }
